{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-posts/all-posts.component.css","webpack:///./src/app/all-posts/all-posts.component.html","webpack:///./src/app/all-posts/all-posts.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/editpost/editpost.component.css","webpack:///./src/app/editpost/editpost.component.html","webpack:///./src/app/editpost/editpost.component.ts","webpack:///./src/app/newpost/newpost.component.css","webpack:///./src/app/newpost/newpost.component.html","webpack:///./src/app/newpost/newpost.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/postdetail/postdetail.component.css","webpack:///./src/app/postdetail/postdetail.component.html","webpack:///./src/app/postdetail/postdetail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1wb3N0cy9hbGwtcG9zdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n    <app-post \\n      *ngFor=\\\"let postObject of postList\\\" \\n      [post]=\\\"postObject\\\"\\n      [apiURL]=\\\"apiURL\\\"\\n    >\\n  </app-post>\\n \\n\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-all-posts',\n  templateUrl: './all-posts.component.html',\n  styleUrls: ['./all-posts.component.css']\n})\nexport class AllPostsComponent implements OnInit {\n\n  title = 'angularStart';\n  username = \"Placeholder\";\n  postList = null;\n  apiURL = '';\n  constructor(private postService:PostService) { }\n\n  ngOnInit() {\n    this.postService.listPosts().subscribe((posts)=>{\n      this.postList = posts;\n    });\n    this.apiURL = environment.apiURL; \n    console.log('apiURL '+this.apiURL);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"header\\\">\\r\\n  <h2>Push Notifications by placeholder </h2>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <flash-messages class=\\\"flash\\\"></flash-messages>\\r\\n  <div class=\\\"leftcolumn\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <div class=\\\"rightcolumn\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <h2> <a href=\\\"/newpost\\\">New Notification</a></h2>\\r\\n        <h2>Audience</h2>\\r\\n        <h2>Users</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n  <h2>Footer stuff here</h2>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PostService } from './post.service';\r\nimport { environment } from '../environments/environment';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [PostService]\r\n})\r\nexport class AppComponent {\r\n  title = 'angularStart';\r\n  username = \"Placeholder\";\r\n  postList = null;\r\n  apiURL = '';\r\n  \r\n  constructor(private postService:PostService,private flashMessage: FlashMessagesService){\r\n    //here\r\n  }\r\n\r\n  ngOnInit(){\r\n    // this.postList = this.postService.listPosts();\r\n    this.postService.listPosts().subscribe((posts)=>{\r\n      this.postList = posts;\r\n    });\r\n    this.apiURL = environment.apiURL; \r\n    console.log('apiURL '+this.apiURL);\r\n  }\r\n\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule} from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PostComponent } from './post/post.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AllPostsComponent } from './all-posts/all-posts.component';\r\nimport { PostdetailComponent } from './postdetail/postdetail.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EditpostComponent } from './editpost/editpost.component';\r\nimport { NewpostComponent } from './newpost/newpost.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/allposts', pathMatch: 'full'},\r\n  { path: 'allposts', component: AllPostsComponent },\r\n  { path: 'postdetail/:id', component: PostdetailComponent },\r\n  { path: 'editpost/:id', component: EditpostComponent },\r\n  { path: 'newpost', component: NewpostComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PostComponent,\r\n    AllPostsComponent,\r\n    PostdetailComponent,\r\n    EditpostComponent,\r\n    NewpostComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(\r\n      routes\r\n    ),\r\n    FlashMessagesModule.forRoot(),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRwb3N0L2VkaXRwb3N0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<div class=\\\"box\\\">\\n    <h2>Edit Notification</h2>\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"updatePost(form.value)\\\">\\n      <div class=\\\"inputBox\\\">\\n        <input type=\\\"hidden\\\" id=\\\"_id\\\" name=\\\"_id\\\" value=\\\"post._id\\\" [ngModel]=\\\"post._id\\\"/>\\n        <input type=\\\"hidden\\\" id=\\\"date\\\" name=\\\"date\\\" value=\\\"post.date\\\" [ngModel]=\\\"post.date\\\"/>\\n        <input type=\\\"text\\\" name=\\\"title\\\" value=\\\"post.title\\\" required=\\\"\\\" [ngModel]=\\\"post.title\\\"/>\\n        <label>Title</label>\\n      </div>\\n      <div class=\\\"inputBox\\\"><input type=\\\"text\\\" name=\\\"audience\\\" value=\\\"post.audience\\\" required=\\\"\\\" [ngModel]=\\\"post.audience\\\"/>\\n        <label>Audience</label>\\n      </div>\\n      <div class=\\\"inputBox\\\"><input type=\\\"text\\\" name=\\\"image\\\" value=\\\"post.image\\\" required=\\\"\\\" [ngModel]=\\\"post.image\\\"/>\\n        <label>Image</label>\\n      </div>\\n      <div class=\\\"inputBox\\\">\\n        <input type=\\\"text\\\" name=\\\"message\\\" value=\\\"post.message\\\" required=\\\"\\\" [ngModel]=\\\"post.message\\\"/>\\n        <label>Message</label>\\n      </div>\\n      <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"Submit\\\"/>\\n    </form>\\n  </div>\\n  <a routerLink=\\\"/allposts\\\">back to posts</a>\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { ActivatedRoute} from '@angular/router';\nimport {  ParamMap } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-editpost',\n  templateUrl: './editpost.component.html',\n  styleUrls: ['./editpost.component.css'],\n  providers: [PostService]\n})\nexport class EditpostComponent implements OnInit {\n\n  post:any;\n\n  constructor(private postService:PostService, private route:ActivatedRoute,private flashMessage: FlashMessagesService) {   }\n\n  ngOnInit() {\n    this.getPost();\n  }\n\n  getPost(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    this.postService.getPost(param)\n    .subscribe((post) => {\n      this.post = post;\n    });\n  }\n\n  updatePost(obj:any):void {\n    this.post._id = obj._id;\n    this.post.title = obj.title;\n    this.post.date = obj.date;\n    this.post.audience = obj.audience;\n    this.post.image = obj.image;\n    this.post.message = obj.message;\n    console.log(\"this.post: \" + JSON.stringify(this.post));\n    // call the photoService update method\n    this.postService.updatePost(this.post._id, this.post)\n     .subscribe((result)=>{\n       location.reload();\n       this.flashMessage.show('Edit Successful', {cssClass: 'flash', timeout:3000});\n    });\n  } \n\n}\n\n","module.exports = \"\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld3Bvc3QvbmV3cG9zdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n  <div class=\\\"box\\\">\\n      <h2>Create New Post</h2>\\n      <form #newpostForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(newpostForm)\\\">\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"post.title\\\" required/>\\n          <label>Title</label>\\n        </div>\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"date\\\" name=\\\"date\\\" required [(ngModel)]=\\\"post.date\\\"/>\\n        </div>\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"audience\\\" placeholder=\\\"Audience\\\" required [(ngModel)]=\\\"post.audience\\\"/>\\n          <label>Audience</label>\\n        </div>\\n        <div class=\\\"inputBox\\\"><input type=\\\"text\\\" name=\\\"image\\\" placeholder=\\\"Image URL\\\" required [(ngModel)]=\\\"post.image\\\" required/>\\n          <label>Image</label>\\n        </div>\\n        <div class=\\\"inputBox\\\">\\n          <input type=\\\"text\\\" name=\\\"message\\\" placeholder=\\\"Message\\\" required [(ngModel)]=\\\"post.message\\\" required/>\\n          <label>Message</label>\\n        </div>\\n        <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"Submit\\\"/>\\n      </form>\\n  </div>\\n  <a routerLink=\\\"/allposts\\\">back to posts</a>\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-newpost',\n  templateUrl: './newpost.component.html',\n  styleUrls: ['./newpost.component.css']\n})\n\nexport class NewpostComponent implements OnInit {\n\n  post = {};\n\n  constructor(private postService:PostService,private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  save(obj) : void {\n    console.log('form values ', this.post);\n    this.postService.newPost(this.post)\n      .subscribe((post)=>{\n        location.reload();\n        this.flashMessage.show('Post Created', {cssClass: 'flash', timeout:5000});\n      });\n   }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n\r\n  private apiURL = environment.apiURL;\r\n   \r\n  constructor(private http:HttpClient) { }\r\n\r\n  listPosts(){\r\n    return this.http.get(this.apiURL + '/api/posts');\r\n  }\r\n\r\n  deletePost(id){\r\n    return this.http.delete(this.apiURL + '/api/posts/'+id);\r\n  }\r\n\r\n  getPost(id){\r\n    return this.http.get(this.apiURL + '/api/posts/'+id);\r\n  }\r\n  updatePost(id,post){\r\n    return this.http.put(this.apiURL + '/api/posts/'+id,post);\r\n  }\r\n\r\n  newPost(post){\r\n    return this.http.post(this.apiURL + '/api/posts/',post);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n    <h2>{{ post.title }}\\r\\n        <div class=\\\"edit\\\">\\r\\n          <a routerLink=\\\"/editpost/{{post._id}}\\\">Edit</a>\\r\\n          <!-- <button type=\\\"button\\\" (click)=\\\"deletePost()\\\">Delete</button> -->\\r\\n          <a href='#' (click)=\\\"deletePost()\\\">Delete</a>\\r\\n        </div>\\r\\n    </h2>\\r\\n    <h5>{{ post.date }}</h5>\\r\\n    <div class=\\\"fakeimg\\\" style=\\\"height:200px\\\">{{ post.image }}</div>\\r\\n    <p>{{ post.message }}</p>\\r\\n   \\r\\n \\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PostService } from '../post.service';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css'],\r\n  providers: [PostService]\r\n})\r\nexport class PostComponent implements OnInit {\r\n  @Input() post;\r\n  @Input() apiURL;\r\n  \r\n  \r\n  constructor(private postService:PostService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    console.log(this.apiURL);\r\n  }\r\n\r\n  deletePost(){\r\n    if (confirm(`Are you sure you want to delete ${this.post.title}?`)){\r\n      console.log(`deleting ${this.post._id}`);\r\n      this.postService.deletePost(this.post._id)\r\n        .subscribe((result)=>{\r\n          // alert(`Post ${this.post.title} has been deleted`);\r\n          this.router.navigate(['/allposts']);\r\n        })\r\n      }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RkZXRhaWwvcG9zdGRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2>{{ post.title }}</h2>\\n<h5>{{ post.date }}</h5>\\n<div class=\\\"fakeimg\\\" style=\\\"height:200px\\\">{{ post.image }}</div>\\n<p>{{ post.message }}</p>\\n<a routerLink=\\\"/allposts\\\">back to posts</a>\\n\\n<div class=\\\"box\\\">\\n    <h2>New Notification</h2>\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"updatePost(form.value)\\\">\\n      <div class=\\\"inputBox\\\">\\n        <input type=\\\"hidden\\\" id=\\\"_id\\\" name=\\\"_id\\\" value=\\\"post._id\\\" [ngModel]=\\\"post._id\\\"/>\\n        <input type=\\\"hidden\\\" id=\\\"date\\\" name=\\\"date\\\" value=\\\"post.date\\\" [ngModel]=\\\"post.date\\\"/>\\n        <input type=\\\"text\\\" name=\\\"title\\\" value=\\\"post.title\\\" required=\\\"\\\" [ngModel]=\\\"post.title\\\"/>\\n        <label>Title</label>\\n      </div>\\n      <div class=\\\"inputBox\\\"><input type=\\\"text\\\" name=\\\"audience\\\" value=\\\"post.audience\\\" required=\\\"\\\" [ngModel]=\\\"post.audience\\\"/>\\n        <label>Audience</label>\\n      </div>\\n      <div class=\\\"inputBox\\\"><input type=\\\"text\\\" name=\\\"image\\\" value=\\\"post.image\\\" required=\\\"\\\" [ngModel]=\\\"post.image\\\"/>\\n        <label>Image</label>\\n      </div>\\n      <div class=\\\"inputBox\\\">\\n        <input type=\\\"text\\\" name=\\\"message\\\" value=\\\"post.message\\\" required=\\\"\\\" [ngModel]=\\\"post.message\\\"/>\\n        <label>Message</label>\\n      </div>\\n      <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"Submit\\\"/>\\n    </form>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post.service';\nimport { ActivatedRoute} from '@angular/router';\nimport {  ParamMap } from '@angular/router';\n\n\n@Component({\n  selector: 'app-postdetail',\n  templateUrl: './postdetail.component.html',\n  styleUrls: ['./postdetail.component.css'],\n  providers: [PostService]\n})\nexport class PostdetailComponent implements OnInit {\n  post:any;\n\n  constructor(private postService:PostService, private route:ActivatedRoute) {   }\n\n  ngOnInit() {\n    this.getPost();\n  }\n\n  getPost(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    this.postService.getPost(param)\n    .subscribe((post) => {\n      this.post = post;\n    });\n  }\n\n  updatePost(obj:any):void {\n    this.post._id = obj._id;\n    this.post.title = obj.title;\n    this.post.date = obj.date;\n    this.post.audience = obj.audience;\n    this.post.image = obj.image;\n    this.post.message = obj.message;\n    console.log(\"this.post: \" + JSON.stringify(this.post));\n    // call the photoService update method\n    this.postService.updatePost(this.post._id, this.post)\n     .subscribe((result)=>{\n       location.reload();\n    });\n  } \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: ''\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}